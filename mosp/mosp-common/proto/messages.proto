// Request messages:       messages sent by the client to the server
// Response messages:      messages sent by the server back to the client 
//                         after a request message
// Notification messages:  messages sent by the server to notify players
//                         when an event occured.

package mosp;

enum Type {
	ConnectRequest = 1;
	ConnectResponse = 2;
	PlayerConnect = 3;
	PlayerDisconnect = 4;
	PlayerMoved = 5;
}

enum CONNECT_REQUEST_ERROR {
	NAME_EXISTS = 1;
	SERVER_FULL = 2;
}

message BaseMessage {
	optional Type type = 1;
}

// A vector message with 2 components
message Vector2 {
	// x-component
	required float x = 1;

	// y-component
	required float y = 2;
}

// A vector message with 3 components
message Vector3 {
	// x-component
	required float x = 1;

	// y-component
	required float y = 2;

	// z-component
	required float z = 3;
}

// This message is sent by the client immediately after connecting
// to the server. It is required.
message ConnectRequestMessage {
	// The type of this message. Do not change this field.
	optional Type type = 1 [default = ConnectRequest];

	// This field describes the name of the player. It should be unique.
	required string name = 2;
}

// This message is sent by the server to a client when he requests 
// to join the game.
message ConnectResponseMessage {
	// The type of this message. Do not change this field.
	optional Type type = 1 [default = ConnectResponse];

	// Whether or not the join request passed. 
	required bool success = 2;

	// The position of the player.
	required Vector2 position = 3;

	// The client ID of the player.
	required int32 client_id = 4;

	// This field describes the error if there is one.
	optional CONNECT_REQUEST_ERROR error = 5;
}

// This message is sent by the server when a player joins the game
// to the players around him.
message PlayerConnectMessage {
	// The type of this message. Do not change this field.
	optional Type type = 1 [default = PlayerConnect];

	// This field describes the name of the player.
	required string name = 2;

	// The client ID of the player who joined.
	required int32 client_id = 3;

	// The position of the player who joined.
	required Vector2 position = 4;
}

// This message is sent by the server when a player disconnects
// to the players around him.
message PlayerDisconnectMessage {
	// The type of this message. Do not change this field.
	optional Type type = 1 [default = PlayerDisconnect];

	// The client ID of the player who disconnected.
	required int32 client_id = 2;
}

// This message is sent by the client when he wants to move to
// a specific position.
message PlayerMovedMessage {
	// The type of this message. Do not change this field.
	optional Type type = 1 [default = PlayerMoved];

	// The client ID of the player who joined.
	required int32 client_id = 2;

	// The position of the player who joined.
	required Vector2 position = 3;
}